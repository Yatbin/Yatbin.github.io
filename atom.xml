<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>迷茫的正太</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-13T03:11:36.673Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>迷茫的正太</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hive运行报错Error during job</title>
    <link href="http://yoursite.com/2020/07/13/Hive%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99Error%20during%20job/"/>
    <id>http://yoursite.com/2020/07/13/Hive运行报错Error during job/</id>
    <published>2020-07-13T03:10:59.398Z</published>
    <updated>2020-07-13T03:11:36.673Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hive运行报错Error-during-job-obtaining-debugging-information…"><a href="#Hive运行报错Error-during-job-obtaining-debugging-information…" class="headerlink" title="Hive运行报错Error during job, obtaining debugging information…"></a>Hive运行报错Error during job, obtaining debugging information…</h1><p>在hive中执行select count(*)语句时候，一直卡住，之后报错，具体报错内容如下:<br><img src="https://s1.ax1x.com/2020/07/13/UGzojK.png" alt="UGzojK.png" border="0" width="960" /><br>之后我执行insert语句也是报这样的错，但是select的简单语句却非常快执行出结果来，然后我按照网上的教程查看自己的yarn页面<br><img src="https://s1.ax1x.com/2020/07/13/UJSBUH.png" alt="UJSBUH.png" border="0" /><br>可以看到<strong>Call From study.centos.yatbin/223.82.248.117 to 223.82.248.117:34116 </strong>这些提示，之后我在hive中执行如下命令将hive设置成本地模式来执行任务，问题得到解决，在此记录以下！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set hive.exec.mode.local.auto&#x3D;true;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hive运行报错Error-during-job-obtaining-debugging-information…&quot;&gt;&lt;a href=&quot;#Hive运行报错Error-during-job-obtaining-debugging-information…&quot; clas
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+GitHub搭建个人博客</title>
    <link href="http://yoursite.com/2020/07/12/Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/07/12/Github搭建博客教程/</id>
    <published>2020-07-12T14:39:07.753Z</published>
    <updated>2020-07-12T16:03:10.577Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-GitHub搭建个人博客"><a href="#Hexo-GitHub搭建个人博客" class="headerlink" title="Hexo+GitHub搭建个人博客"></a>Hexo+GitHub搭建个人博客</h1><h2 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h2><p>1、下载并安装Node.js：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">https://nodejs.org/en/</a><br><img src="https://s1.ax1x.com/2020/07/11/U1myO1.png" alt="U1myO1.png" border="0" width="960"/></p><p>2、下载并安装Git：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a><br><img src="https://s1.ax1x.com/2020/07/11/U1nJ9e.png" alt="U1nJ9e.png" border="0" width="960" /></p><p>查看Git安装是否完成，在win+r中输入cmd命令窗口弹出后，输入git –version查看git版本：<br><img src="https://s1.ax1x.com/2020/07/11/U1nccj.png" alt="U1nccj.png" border="0" /></p><p>3、Github注册和创建仓库：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a><br>创建完Github账号后，创建一个仓库来管理自己的文件。<br>（1）点击个人主页右上角“+”里面的 New repository。<br><img src="https://s1.ax1x.com/2020/07/11/U1nfH0.png" alt="U1nfH0.png" border="0" /><br>（2）输入Repository name：用户名.github.io，这里的用户名一定<strong>要和注册时候的一样</strong>！<br><img src="https://s1.ax1x.com/2020/07/11/U1usVx.png" alt="U1usVx.png" border="0" /><br>（3）点击Create repository。</p><p>4、配置SSH免密登录<br>（1）在桌面点击鼠标右键，选择<strong>Git Bash Here</strong>，打开Git Bash客户端。<br>（2）设置user name和email：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><br>（3）生成SSH密钥。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><br>（4）输入命令后直接回车即可，在C盘的用户目录下会生成.ssh文件夹。<br>（5）在Github上添加SSH keys。具体步骤是点击Github头像下的<strong>Settings-&gt;SSH and GPG keys-&gt;New SSH key</strong>，将本地的公钥<strong>id_rsa_pub</strong>内容复制粘贴到其中即可。<br><img src="https://s1.ax1x.com/2020/07/11/U1M5UP.png" alt="U1M5UP.png" border="0" /><br>（6）验证SSH免密是否成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>1、创建一个文件夹，比如文件名为Hexo，进入到该文件夹里，在文件导航栏里输入cmd进入命令提示符，输入以下命令安装Hexo:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line">cnpm install hexo-cli -g</span><br><span class="line">cnpm install hexo --save</span><br></pre></td></tr></table></figure><br>2、初始化hexo，在blog目录下点击鼠标右键，打开<strong>Git Bash</strong>终端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><br>3、在cmd中输入以下命令安装依赖以及相关插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cnpm install</span><br><span class="line">cnpm install hexo-generator-index --save</span><br><span class="line">cnpm install hexo-generator-archive --save</span><br><span class="line">cnpm install hexo-generator-category --save</span><br><span class="line">cnpm install hexo-generator-tag --save</span><br><span class="line">cnpm install hexo-server --save</span><br><span class="line">cnpm install hexo-deployer-git --save</span><br><span class="line">cnpm install hexo-deployer-heroku --save</span><br><span class="line">cnpm install hexo-deployer-rsync --save</span><br><span class="line">cnpm install hexo-deployer-openshift --save</span><br><span class="line">cnpm install hexo-renderer-marked@0.2 --save</span><br><span class="line">cnpm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">cnpm install hexo-generator-feed@1 --save</span><br><span class="line">cnpm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><br>4、启动Hexo<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><br>5、在浏览器中输入：<strong>localhost:4000</strong>，可以看到Hexo的示例页面<br><img src="https://s1.ax1x.com/2020/07/11/U1GJ9x.png" alt="U1GJ9x.png" border="0" width="960" /></p><h2 id="将博客部署到Github"><a href="#将博客部署到Github" class="headerlink" title="将博客部署到Github"></a>将博客部署到Github</h2><p>1、在上面创建的Hexo文件夹中找到<strong>_config.yml</strong>文件，用文本编辑器打开，在最下方添加远程仓库地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  #xxx改为你的github用户名（请修改）</span><br><span class="line">  #注意，如果repository写成https:&#x2F;&#x2F;github.com，在提交任务至Github时，会频繁输入用户名密码</span><br><span class="line">  repository: git@github.com:xxx&#x2F;xxx.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><br>2、在<strong>Hexo\source_post</strong>目录下右击选择<strong>Git Bash Here</strong>,使用以下命令新建博客，会生成firstblog.md的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;firstblog&quot;</span><br></pre></td></tr></table></figure><br>3、可以根据Markdown语法来编辑上面生成的文件<br>4、设置身份信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure><br>5、部署到Github上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><br>6、如果遇到到<strong>ERROR Deployer not found: git</strong>提示，可以尝试使用以下命令后再重新部署到Github上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><br>7、在浏览器上输入：<strong>用户名.github.io</strong>即可看到刚才写的博客已提交到仓库，在这一步可能你看到的是<strong>&lt;%- partial(‘_partial/head’) %&gt;</strong>，等一小会后刷新就可以了，至此，一个简单的博客就搭建好了，接下来就可以美化我们的博客了。</p><h2 id="美化博客"><a href="#美化博客" class="headerlink" title="美化博客"></a>美化博客</h2><p>基于hexo博客系统的主题有很多，你可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">这里</a>找到你喜欢的主题。我采用的是next主题，以下是注意的几点：</p><ul><li>next主题的<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">官方网站</a>详细阐述了主题的基本配置过程，我也是参照它一步步进行配置的</li><li>在配置主题的过程中要注意区分两个配置文件，一个是主题的配置文件_config.yml，一个是站点的配置文件_config.yml。因为有些配置操作实在主题的配置文件中进行的，有的实在站点的配置文件进行的，一定不能弄混了。</li><li>推荐一篇<a href="http://shenzekun.cn/hexo的next主题个性化配置教程.html" target="_blank" rel="noopener">next主题美化的博文</a></li><li>对主题进行配置时，建议是每修改一项之后都在本地运行一下（先运行hexo g命令，在运行hexo s命令，在浏览器中查看），看看有没有出错，这样可以及时找到出错的地方。</li></ul><h2 id="撰写博客"><a href="#撰写博客" class="headerlink" title="撰写博客"></a>撰写博客</h2><p>1、可以使用Markdown语法来撰写自己的博客内容，在博客内容之前加上如下语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World #自己的博客标题</span><br><span class="line">tags: test #博客标签</span><br><span class="line">categories: test #博客分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>2、之后将博客导出为md格式放到Hexo根目录下的source_posts文件夹里<br>3、使用<strong>hexo d -g</strong>将博客部署到github上</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-GitHub搭建个人博客&quot;&gt;&lt;a href=&quot;#Hexo-GitHub搭建个人博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo+GitHub搭建个人博客&quot;&gt;&lt;/a&gt;Hexo+GitHub搭建个人博客&lt;/h1&gt;&lt;h2 id=&quot;基本环境&quot;
      
    
    </summary>
    
      <category term="教程" scheme="http://yoursite.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
